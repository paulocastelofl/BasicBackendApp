// <auto-generated />
using System;
using GanEdenComex.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GanEdenComex.Infra.Data.Migrations
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20230307005538_Alter_Table_ZFM")]
    partial class AlterTableZFM
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GanEdenComex.Domain.Entities.AcordoAladi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AcordoAladi");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Agente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("CodigoInterno")
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdPais")
                        .HasColumnType("integer");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("text");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<string>("NIF")
                        .HasColumnType("text");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdPais");

                    b.ToTable("Agente");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.AtividadeEconomica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Ordem")
                        .HasColumnType("integer");

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AtividadeEconomica");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.AtoLegal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("FundamentoII")
                        .HasColumnType("text");

                    b.Property<string>("FundamentoPISCOFINS")
                        .HasColumnType("text");

                    b.Property<bool?>("Geral")
                        .HasColumnType("boolean");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Orgao")
                        .HasColumnType("text");

                    b.Property<string>("RegimeIPI")
                        .HasColumnType("text");

                    b.Property<string>("RegimePISCOFINS")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .HasColumnType("text");

                    b.Property<bool?>("VincularProcessos")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("AtoLegal");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.CertificadoDigital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Arquivo_CertificadoDigital")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DT_Vencimento_CertificadoDigital")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Senha_CerficadoDigital")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CertificadoDigital");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.CoberturaCambial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CoberturaCambial");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Agencia")
                        .HasColumnType("text");

                    b.Property<string>("Banco")
                        .HasColumnType("text");

                    b.Property<bool?>("ContaPadraoCNAB")
                        .HasColumnType("boolean");

                    b.Property<string>("CpfTitular")
                        .HasColumnType("text");

                    b.Property<bool?>("GeracaoDeBoleto")
                        .HasColumnType("boolean");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<string>("Limite")
                        .HasColumnType("text");

                    b.Property<string>("NomeTitular")
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<string>("RestricaoUso")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeBloqueio")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Conta");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Credenciais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("login")
                        .HasColumnType("text");

                    b.Property<string>("portal")
                        .HasColumnType("text");

                    b.Property<string>("senha")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Credenciais");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Documentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CaminhoDocumento")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataVencimentoDocumento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("text");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AprovaRegistroDI")
                        .HasColumnType("boolean");

                    b.Property<bool?>("AtualizarFornecedoresFabricantes")
                        .HasColumnType("boolean");

                    b.Property<bool?>("AtualizarItens")
                        .HasColumnType("boolean");

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("CNAE")
                        .HasColumnType("text");

                    b.Property<string>("CNPJ")
                        .HasColumnType("text");

                    b.Property<bool?>("CadastroDeFornecedoresFabricantes")
                        .HasColumnType("boolean");

                    b.Property<bool?>("CadastroDeItens")
                        .HasColumnType("boolean");

                    b.Property<string>("CentroDeCusto")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<bool?>("ControlarCEMercantes")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ControlarCambio")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ControlarDemurrage")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Despachante")
                        .HasColumnType("boolean");

                    b.Property<string>("DespachantePadrao")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<bool?>("Exportador")
                        .HasColumnType("boolean");

                    b.Property<int?>("IdAtividadeEconomica")
                        .HasColumnType("integer");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdPais")
                        .HasColumnType("integer");

                    b.Property<bool?>("Importador")
                        .HasColumnType("boolean");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("text");

                    b.Property<string>("InscricaoSuframa")
                        .HasColumnType("text");

                    b.Property<double?>("LimiteDeValorFOB")
                        .HasColumnType("double precision");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDeCadastroNoMA")
                        .HasColumnType("text");

                    b.Property<int?>("NumeroSequencialFIEAM")
                        .HasColumnType("integer");

                    b.Property<int?>("PrazoDiasCEMercanteCritico")
                        .HasColumnType("integer");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.Property<bool?>("Segurado")
                        .HasColumnType("boolean");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdAtividadeEconomica");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdPais");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.ExTIPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ano")
                        .HasColumnType("text");

                    b.Property<string>("ato")
                        .HasColumnType("text");

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("orgao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ExTIPI");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.ExTarifario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ano")
                        .HasColumnType("text");

                    b.Property<string>("ato")
                        .HasColumnType("text");

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("orgao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ExTarifario");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<int?>("IdPais")
                        .HasColumnType("integer");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<string>("Nome_Fabricante")
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<string>("Tipo_Fabricante")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.ToTable("Fabricante");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("CNPJ")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("CodigoInterno")
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdPais")
                        .HasColumnType("integer");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeVinculo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdPais");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.FundamentoLegal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FundamentoLegal");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Incoterms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("freteEmbutido")
                        .HasColumnType("boolean");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<bool?>("seguroEmbutido")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Incoterms");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.InscricaoEstadual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<string>("Inscricao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("InscricaoEstadual");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdFornecedor")
                        .HasColumnType("integer");

                    b.Property<double?>("aliquotaCofins")
                        .HasColumnType("double precision");

                    b.Property<double?>("aliquotaIi")
                        .HasColumnType("double precision");

                    b.Property<double?>("aliquotaIpi")
                        .HasColumnType("double precision");

                    b.Property<double?>("aliquotaPis")
                        .HasColumnType("double precision");

                    b.Property<string>("codigoInterno")
                        .HasColumnType("text");

                    b.Property<string>("descricao")
                        .HasColumnType("text");

                    b.Property<string>("descricaoItemNfe")
                        .HasColumnType("text");

                    b.Property<string>("detalheNcm")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("naladi")
                        .HasColumnType("text");

                    b.Property<string>("ncm")
                        .HasColumnType("text");

                    b.Property<string>("partNumber")
                        .HasColumnType("text");

                    b.Property<string>("produtoSuframa")
                        .HasColumnType("text");

                    b.Property<string>("unidade")
                        .HasColumnType("text");

                    b.Property<string>("unidadeOrganizacional")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Modal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Modal");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.ModalidadePagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<int?>("ordem")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ModalidadePagamento");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Moeda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Moeda");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.MotivoSemCobertura_cambial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MotivoSemCobertura_cambial");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Naladi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<int?>("ordem")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Naladi");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Ncm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IdUnidade")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<double?>("VlCofins")
                        .HasColumnType("double precision");

                    b.Property<double?>("VlIi")
                        .HasColumnType("double precision");

                    b.Property<double?>("VlIiMercosul")
                        .HasColumnType("double precision");

                    b.Property<double?>("VlIpi")
                        .HasColumnType("double precision");

                    b.Property<double?>("VlPis")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("IdUnidade");

                    b.ToTable("Ncm");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CdNfe")
                        .HasColumnType("text");

                    b.Property<string>("Codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Iso3166")
                        .HasColumnType("text");

                    b.Property<string>("Iso3166_3")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int?>("Ordem")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdFabricante")
                        .HasColumnType("integer");

                    b.Property<int?>("IdNCM")
                        .HasColumnType("integer");

                    b.Property<string>("Nome_Produto")
                        .HasColumnType("text");

                    b.Property<double?>("Peso")
                        .HasColumnType("double precision");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo_De_Embalagem")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdFabricante");

                    b.HasIndex("IdNCM");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.ProdutoSuframa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProdutoSuframa");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.RegimeTributavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RegimeTributavel");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.RegistroAcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Dt_E_Hora_Ultimo_Acesso")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Processo_Ultimo_Acesso")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RegistroAcesso");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.RepresentanteLegal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .HasColumnType("text");

                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<int?>("IdCertificadoDigital")
                        .HasColumnType("integer");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<string>("MarinhaMercante")
                        .HasColumnType("text");

                    b.Property<string>("RegistroRepresentante")
                        .HasColumnType("text");

                    b.Property<string>("SenhaSISCOMEX")
                        .HasColumnType("text");

                    b.Property<string>("SenhaSUFRAMA")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCertificadoDigital");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("RepresentanteLegal");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.TipoAcordoTarifario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoAcordoTarifario");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.TipoDocumentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdDocumentos")
                        .HasColumnType("integer");

                    b.Property<string>("NomeTipoDocumento")
                        .HasColumnType("text");

                    b.Property<string>("TipoSiscomexDocumento")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumentos");

                    b.ToTable("TipoDocumentos");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.TipoFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AgenteDeCarga")
                        .HasColumnType("boolean");

                    b.Property<bool>("CIAdeTransporte")
                        .HasColumnType("boolean");

                    b.Property<bool>("DespachanteAduaneiro")
                        .HasColumnType("boolean");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<bool>("Representante")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("TipoFornecedor");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Transportador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("CNPJ")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("CodigoInterno")
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdPais")
                        .HasColumnType("integer");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("text");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdPais");

                    b.ToTable("Transportador");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Unidade");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Urf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("estado")
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<string>("regiao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Urf");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.ZFM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("ArmazenaArquivoRetornoPLI")
                        .HasColumnType("boolean");

                    b.Property<bool?>("DTE")
                        .HasColumnType("boolean");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<bool?>("Industria")
                        .HasColumnType("boolean");

                    b.Property<string>("NumeroSequencialPLI")
                        .HasColumnType("text");

                    b.Property<bool?>("OptanteLei2826")
                        .HasColumnType("boolean");

                    b.Property<int?>("RepresentanteLegal")
                        .HasColumnType("integer");

                    b.Property<bool?>("ResponsavelSefaz")
                        .HasColumnType("boolean");

                    b.Property<string>("SenhaSuframa")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("ZFM");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.ZFMAplicacaoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ZFMAplicacaoMaterial");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.ZFMDestinacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ZFMDestinacao");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.ZFMTributacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("aliquotaIcms")
                        .HasColumnType("double precision");

                    b.Property<double?>("aliquotaMva")
                        .HasColumnType("double precision");

                    b.Property<double?>("aliquotaReducao")
                        .HasColumnType("double precision");

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<double?>("coeficienteLei2826")
                        .HasColumnType("double precision");

                    b.Property<double?>("coeficienteNormal")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ZFMTributacao");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.ZFMUtilizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dtModificacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ZFMUtilizacao");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Agente", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("GanEdenComex.Domain.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais");

                    b.Navigation("Empresa");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.AtoLegal", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Conta", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Documentos", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Empresa", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.AtividadeEconomica", "AtividadeEconomica")
                        .WithMany()
                        .HasForeignKey("IdAtividadeEconomica");

                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", null)
                        .WithMany("Associados")
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("GanEdenComex.Domain.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais");

                    b.Navigation("AtividadeEconomica");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Fabricante", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Fornecedor", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("GanEdenComex.Domain.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais");

                    b.Navigation("Empresa");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.InscricaoEstadual", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany("InscricaoEstaduais")
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Item", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("GanEdenComex.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("IdFornecedor");

                    b.Navigation("Empresa");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Ncm", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("IdUnidade");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Produto", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("IdFabricante");

                    b.HasOne("GanEdenComex.Domain.Entities.Ncm", "Ncm")
                        .WithMany()
                        .HasForeignKey("IdNCM");

                    b.Navigation("Fabricante");

                    b.Navigation("Ncm");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.RegistroAcesso", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.RepresentanteLegal", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.CertificadoDigital", "CertificadoDigital")
                        .WithMany()
                        .HasForeignKey("IdCertificadoDigital");

                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("CertificadoDigital");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.TipoDocumentos", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Documentos", "Documentos")
                        .WithMany()
                        .HasForeignKey("IdDocumentos");

                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.TipoFornecedor", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Transportador", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("GanEdenComex.Domain.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais");

                    b.Navigation("Empresa");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.User", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.ZFM", b =>
                {
                    b.HasOne("GanEdenComex.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GanEdenComex.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Associados");

                    b.Navigation("InscricaoEstaduais");
                });
#pragma warning restore 612, 618
        }
    }
}
